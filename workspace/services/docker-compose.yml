version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik-gateway
    restart: unless-stopped
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
    networks:
      - backend-network
  mongodb:
    image: mongo:7.0
    container_name: applications-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: devdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - backend-network

  application-settings-api:
    build:
      context: ./ApplicationSettings.Api
      dockerfile: Dockerfile
    container_name: application-settings-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDb__ConnectionString=mongodb://admin:password@mongodb:27017/devdb?authSource=admin
    expose:
      - "8080"
    depends_on:
      - mongodb
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.settings-api.rule=Host(`localhost`) && PathPrefix(`/api/settings`)"
      - "traefik.http.routers.settings-api.entrypoints=web"
      - "traefik.http.services.settings-api.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.settings-strip.stripprefix.prefixes=/api/settings"
      - "traefik.http.routers.settings-api.middlewares=settings-strip"
    networks:
      - backend-network

volumes:
  mongodb_data:
    driver: local

networks:
  backend-network:
    driver: bridge